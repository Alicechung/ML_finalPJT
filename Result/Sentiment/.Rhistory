type = 'class')
train_elastic <- glmnet(x = train_x, y = train_alcohol, alpha = 0.5)
Elastic_pred <- predict(train_elastic, newx= valid_x,
s = min(train_elastic$lambda),
type = 'class')
train_rf <- randomForest(V1 ~ ., data = df)
Rf_pred <- predict(train_rf, as.data.frame(valid_x))
pred_table <- cbind(Linear_pred, Lasso_pred, Ridge_pred, Elastic_pred, Rf_pred)
unweighted_avg<- rowMeans(pred_table)
unweighted_avg
weighteddf <- cbind(Linear_pred * predlm$coefficients,
Lasso_pred * predlmlasso$coefficients,
Ridge_pred * predlmridge$coefficients,
Elastic_pred * predlmelastic$coefficients,
Rf_pred * predlmrf$coefficients)
weighted_avg <- rowSums(weighteddf)/sum(w)
weighted_avg
pred_mat<- as.matrix(cbind(pred_table, unweighted_avg, weighted_avg))
colnames(pred_mat)<- c('lm','lasso','ridge','elastic','rf','unweighted','weighted')
cor(pred_mat)
loss_func <- c(sum(abs(valid_alcohol-Linear_pred))/20,
sum(abs(valid_alcohol-Lasso_pred))/20,
sum(abs(valid_alcohol-Ridge_pred))/20,
sum(abs(valid_alcohol-Elastic_pred))/20,
sum(abs(valid_alcohol-Rf_pred))/20,
sum(abs(valid_alcohol-unweighted_avg))/20,
sum(abs(valid_alcohol-weighted_avg))/20)
diff_table  <- as.matrix(loss_func)
rownames(diff_table) <- c("Linear","Lasso","Ridge","Elastic","Random_Forest","Unweighted","Weighted")
colnames(diff_table) <- c("Aerage absolute difference ")
diff_table
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(randomForest)
library(rfUtilities)
load("~/Desktop/2018WINTER/PLSC43502/TAD/StudentDrinking.RData")
lm1<-lm(alcohol~X)
summary(lm1)
library(glmnet)
set.seed(12345)
folds<- sample(1:10, nrow(X), replace=T)
out_of_samp<- c()
for(z in 1:10){
train<- which(folds!=z) ##the observations we will use to train the model
test<- which(folds==z) ##the observations we will use to test the model
lassoalcohol<- cv.glmnet(x = X[train,], y = alcohol[train], alpha = 1) ##fitting the LASSO model on the data.
out_of_samp[test]<- predict(lassoalcohol, newx= X[test,], s = lassoalcohol$lambda.min,
type = 'class') ##predicting the labels
print(z) ##printing the labels
}
summary(lassoalcohol)
out_of_samp1<- c()
for(z in 1:10){
train<- which(folds!=z) ##the observations we will use to train the model
test<- which(folds==z) ##the observations we will use to test the model
ridgealcohol<- cv.glmnet(x = X[train,], y = alcohol[train], alpha = 0) ##fitting the LASSO model on the data.
out_of_samp1[test]<- predict(ridgealcohol, newx= X[test,], s = ridgealcohol$lambda.min,
type = 'class') ##predicting the labels
print(z) ##printing the labels
}
summary(ridgealcohol)
out_of_samp2<- c()
for(z in 1:10){
train<- which(folds!=z) ##the observations we will use to train the model
test<- which(folds==z) ##the observations we will use to test the model
elasticalcohol<- cv.glmnet(x = X[train,], y = alcohol[train], alpha = 0.5) ##fitting the LASSO model on the data.
out_of_samp2[test]<- predict(elasticalcohol, newx= X[test,], s = elasticalcohol$lambda.min,
type = 'class') ##predicting the labels
print(z) ##printing the labels
}
summary(elasticalcohol)
coeflasso<-coef(lassoalcohol, s = lassoalcohol$lambda)
coefridge<-coef(ridgealcohol, s = ridgealcohol$lambda)
coefelastic<-coef(elasticalcohol, s = elasticalcohol$lambda)
plot(lassoalcohol$lambda, coeflasso[3,], type='l', ylim = c(-0.1, 1),
xlab = 'lamda', ylab = 'The coefficient on male with LASSO')
abline(h = lm1$coefficients[[3]])
plot(ridgealcohol$lambda, coefridge[3,], type='l', ylim = c(-0.1, 1),
xlab = 'lamda', ylab = 'The coefficient on male with Ridge')
abline(h = lm1$coefficients[[3]])
plot(elasticalcohol$lambda, coefelastic[3,], type='l', ylim = c(-0.1, 1),
xlab = 'lamda', ylab = 'The coefficient on male with Elastic-Net')
abline(h = lm1$coefficients[[3]])
valid_x <- X[1:20,]
valid_alcohol <- alcohol[1:20]
train_x <- as.matrix(X[-(1:20),])
train_alcohol <- as.matrix(alcohol[-(1:20)])
# (1)linear regression
library(DAAG)
predict_lm<-c()
df <- as.data.frame(cbind(train_alcohol, train_x))
cvlm <- cv.lm(df, lm(V1 ~ ., data = df), m=10, plotit = FALSE)
predict_lm <-cvlm$Predicted
#(2) LASSO
predict_lasso<-c()
cvlassoalcohol<- cv.glmnet(x = train_x, y = train_alcohol, alpha = 1)
predict_lasso<- predict(cvlassoalcohol, newx= train_x,
s = cvlassoalcohol$lambda.min,
type = 'class')
#(3) Ridge
predict_ridge<-c()
cvridgealcohol<- cv.glmnet(x = train_x, y = train_alcohol, alpha = 0)
predict_ridge<- predict(cvridgealcohol, newx= train_x,
s = cvridgealcohol$lambda.min,
type = 'class')
#(4) Elastic-Net
predict_elastic<-c()
cvelasticalcohol<- cv.glmnet(x = train_x, y = train_alcohol, alpha = 0.5)
predict_elastic<- predict(cvelasticalcohol, newx= train_x,
s = cvelasticalcohol$lambda.min,
type = 'class')
#(5) Random Forest
predict_rf<-c()
cvrf<- rfcv(train_x, train_alcohol, cv.fold=10)
predict_rf<-cvrf$predicted[1]
predlm<- lm(V1 ~ predict_lm-1, data = df)
predlmlasso<- lm(V1 ~ predict_lasso-1, data = df)
predlmridge<- lm(V1 ~   predict_ridge-1,data = df)
predlmelastic<- lm(V1 ~ predict_elastic-1,data = df)
predlmrf<- lm(V1 ~ predict_rf$`20`-1,data = df)
summary(predlm)
summary(predlmlasso)
summary(predlmridge)
summary(predlmelastic)
summary(predlmrf)
options(scipen=1, digits=5)
w<-c(predlm$coefficients,
predlmlasso$coefficients,
predlmridge$coefficients,
predlmelastic$coefficients,
predlmrf$coefficients)
w
train_lm <- lm(V1 ~ ., data = df)
Linear_pred <- predict(train_lm, as.data.frame(valid_x))
train_lasso <- glmnet(x = train_x, y = train_alcohol, alpha = 1)
Lasso_pred <- predict(train_lasso, newx= valid_x,
s = min(train_lasso$lambda),
type = 'class')
train_ridge<- glmnet(x = train_x, y = train_alcohol, alpha = 0)
Ridge_pred <-predict(train_ridge, newx= valid_x,
s = min(train_ridge$lambda),
type = 'class')
train_elastic <- glmnet(x = train_x, y = train_alcohol, alpha = 0.5)
Elastic_pred <- predict(train_elastic, newx= valid_x,
s = min(train_elastic$lambda),
type = 'class')
train_rf <- randomForest(V1 ~ ., data = df)
Rf_pred <- predict(train_rf, as.data.frame(valid_x))
pred_table <- cbind(Linear_pred, Lasso_pred, Ridge_pred, Elastic_pred, Rf_pred)
unweighted_avg<- rowMeans(pred_table)
unweighted_avg
weighteddf <- cbind(Linear_pred * predlm$coefficients,
Lasso_pred * predlmlasso$coefficients,
Ridge_pred * predlmridge$coefficients,
Elastic_pred * predlmelastic$coefficients,
Rf_pred * predlmrf$coefficients)
weighted_avg <- rowSums(weighteddf)/sum(w)
weighted_avg
pred_mat<- as.matrix(cbind(pred_table, unweighted_avg, weighted_avg))
colnames(pred_mat)<- c('lm','lasso','ridge','elastic','rf','unweighted','weighted')
cor(pred_mat)
loss_func <- c(sum(abs(valid_alcohol-Linear_pred))/20,
sum(abs(valid_alcohol-Lasso_pred))/20,
sum(abs(valid_alcohol-Ridge_pred))/20,
sum(abs(valid_alcohol-Elastic_pred))/20,
sum(abs(valid_alcohol-Rf_pred))/20,
sum(abs(valid_alcohol-unweighted_avg))/20,
sum(abs(valid_alcohol-weighted_avg))/20)
diff_table  <- as.matrix(loss_func)
rownames(diff_table) <- c("Linear","Lasso","Ridge","Elastic","Random_Forest","Unweighted","Weighted")
colnames(diff_table) <- c("Aerage absolute difference ")
diff_table
abline(h = lm1$coefficients[[3]], col = 'red')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(randomForest)
library(rfUtilities)
load("~/Desktop/2018WINTER/PLSC43502/TAD/StudentDrinking.RData")
lm1<-lm(alcohol~X)
summary(lm1)
library(glmnet)
set.seed(8899)
folds<- sample(1:10, nrow(X), replace=T)
out_of_samp<- c()
for(z in 1:10){
train<- which(folds!=z) ##the observations we will use to train the model
test<- which(folds==z) ##the observations we will use to test the model
lassoalcohol<- cv.glmnet(x = X[train,], y = alcohol[train], alpha = 1)
out_of_samp[test]<- predict(lassoalcohol, newx= X[test,], s = lassoalcohol$lambda.min,
type = 'class') ##predicting the labels
print(z) ##printing the labels
}
summary(lassoalcohol)
out_of_samp1<- c()
for(z in 1:10){
train<- which(folds!=z) ##the observations we will use to train the model
test<- which(folds==z) ##the observations we will use to test the model
ridgealcohol<- cv.glmnet(x = X[train,], y = alcohol[train], alpha = 0)
out_of_samp1[test]<- predict(ridgealcohol, newx= X[test,], s = ridgealcohol$lambda.min,
type = 'class') ##predicting the labels
print(z) ##printing the labels
}
summary(ridgealcohol)
out_of_samp2<- c()
for(z in 1:10){
train<- which(folds!=z) ##the observations we will use to train the model
test<- which(folds==z) ##the observations we will use to test the model
elasticalcohol<- cv.glmnet(x = X[train,], y = alcohol[train], alpha = 0.5)
out_of_samp2[test]<- predict(elasticalcohol, newx= X[test,], s = elasticalcohol$lambda.min,
type = 'class') ##predicting the labels
print(z) ##printing the labels
}
summary(elasticalcohol)
coeflasso<-coef(lassoalcohol, s = lassoalcohol$lambda)
coefridge<-coef(ridgealcohol, s = ridgealcohol$lambda)
coefelastic<-coef(elasticalcohol, s = elasticalcohol$lambda)
plot(lassoalcohol$lambda, coeflasso[3,], type='l', ylim = c(-0.1, 1),
xlab = 'lamda', ylab = 'The coefficient on male with LASSO')
abline(h = lm1$coefficients[[3]])
plot(ridgealcohol$lambda, coefridge[3,], type='l', ylim = c(-0.1, 1),
xlab = 'lamda', ylab = 'The coefficient on male with Ridge')
abline(h = lm1$coefficients[[3]])
plot(elasticalcohol$lambda, coefelastic[3,], type='l', ylim = c(-0.1, 1),
xlab = 'lamda', ylab = 'The coefficient on male with Elastic-Net')
abline(h = lm1$coefficients[[3]], col = 'red')
valid_x <- X[1:20,]
valid_alcohol <- alcohol[1:20]
train_x <- as.matrix(X[-(1:20),])
train_alcohol <- as.matrix(alcohol[-(1:20)])
# (1)linear regression
library(DAAG)
predict_lm<-c()
df <- as.data.frame(cbind(train_alcohol, train_x))
cvlm <- cv.lm(df, lm(V1 ~ ., data = df), m=10, plotit = FALSE)
predict_lm <-cvlm$Predicted
#(2) LASSO
predict_lasso<-c()
cvlassoalcohol<- cv.glmnet(x = train_x, y = train_alcohol, alpha = 1)
predict_lasso<- predict(cvlassoalcohol, newx= train_x,
s = cvlassoalcohol$lambda.min,
type = 'class')
#(3) Ridge
predict_ridge<-c()
cvridgealcohol<- cv.glmnet(x = train_x, y = train_alcohol, alpha = 0)
predict_ridge<- predict(cvridgealcohol, newx= train_x,
s = cvridgealcohol$lambda.min,
type = 'class')
#(4) Elastic-Net
predict_elastic<-c()
cvelasticalcohol<- cv.glmnet(x = train_x, y = train_alcohol, alpha = 0.5)
predict_elastic<- predict(cvelasticalcohol, newx= train_x,
s = cvelasticalcohol$lambda.min,
type = 'class')
#(5) Random Forest
predict_rf<-c()
cvrf<- rfcv(train_x, train_alcohol, cv.fold=10)
predict_rf<-cvrf$predicted[1]
predlm<- lm(V1 ~ predict_lm-1, data = df)
predlmlasso<- lm(V1 ~ predict_lasso-1, data = df)
predlmridge<- lm(V1 ~   predict_ridge-1,data = df)
predlmelastic<- lm(V1 ~ predict_elastic-1,data = df)
predlmrf<- lm(V1 ~ predict_rf$`20`-1,data = df)
summary(predlm)
summary(predlmlasso)
summary(predlmridge)
summary(predlmelastic)
summary(predlmrf)
options(scipen=1, digits=5)
w<-c(predlm$coefficients,
predlmlasso$coefficients,
predlmridge$coefficients,
predlmelastic$coefficients,
predlmrf$coefficients)
w
train_lm <- lm(V1 ~ ., data = df)
Linear_pred <- predict(train_lm, as.data.frame(valid_x))
train_lasso <- glmnet(x = train_x, y = train_alcohol, alpha = 1)
Lasso_pred <- predict(train_lasso, newx= valid_x,
s = min(train_lasso$lambda),
type = 'class')
train_ridge<- glmnet(x = train_x, y = train_alcohol, alpha = 0)
Ridge_pred <-predict(train_ridge, newx= valid_x,
s = min(train_ridge$lambda),
type = 'class')
train_elastic <- glmnet(x = train_x, y = train_alcohol, alpha = 0.5)
Elastic_pred <- predict(train_elastic, newx= valid_x,
s = min(train_elastic$lambda),
type = 'class')
train_rf <- randomForest(V1 ~ ., data = df)
Rf_pred <- predict(train_rf, as.data.frame(valid_x))
pred_table <- cbind(Linear_pred, Lasso_pred, Ridge_pred, Elastic_pred, Rf_pred)
unweighted_avg<- rowMeans(pred_table)
unweighted_avg
weighteddf <- cbind(Linear_pred * predlm$coefficients,
Lasso_pred * predlmlasso$coefficients,
Ridge_pred * predlmridge$coefficients,
Elastic_pred * predlmelastic$coefficients,
Rf_pred * predlmrf$coefficients)
weighted_avg <- rowSums(weighteddf)/sum(w)
weighted_avg
pred_mat<- as.matrix(cbind(pred_table, unweighted_avg, weighted_avg))
colnames(pred_mat)<- c('lm','lasso','ridge','elastic','rf','unweighted','weighted')
cor(pred_mat)
loss_func <- c(sum(abs(valid_alcohol-Linear_pred))/20,
sum(abs(valid_alcohol-Lasso_pred))/20,
sum(abs(valid_alcohol-Ridge_pred))/20,
sum(abs(valid_alcohol-Elastic_pred))/20,
sum(abs(valid_alcohol-Rf_pred))/20,
sum(abs(valid_alcohol-unweighted_avg))/20,
sum(abs(valid_alcohol-weighted_avg))/20)
diff_table  <- as.matrix(loss_func)
rownames(diff_table) <- c("Linear","Lasso","Ridge","Elastic","Random_Forest","Unweighted","Weighted")
colnames(diff_table) <- c("Aerage absolute difference ")
diff_table
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
library(readtext)
library(stringr)
library(stm)
library(stats)
#strings_df <- readtext("../PLSC43502/ML_finalPJT/Data/PE2012/*")
#strings_df$doc_id <- str_extract(strings_df$doc_id, "\\D{4,}")
#strings_df1 <-read.csv('../Code/text2.csv')
strings<-read.csv('../Code/clean_rust_10_180221.csv')
processed <- textProcessor(strings$Clean,
removestopwords = T, removenumbers = T,
lowercase = T, removepunctuation = T)
out <- prepDocuments(processed$documents, processed$vocab,
processed$meta)
fit_10 <- stm(out$documents, out$vocab
, K=45
, emtol = 0.00001
, seed = 12345
, verbose = F)
stm_15_labels_20 <- labelTopics(fit_10, n = 10, topics = 1:10)
#stm_8topic <- stm(out$documents, out$vocab, 8, seed= 1234,  verbose = F)
result <- stm_15_labels_20$frex
r <- as.data.frame(result)
write.csv(r, file = "../Result/clean_topicmodelling_t45_cleantext_addyear_180021.csv")
stmdf_theta <- data.frame(fit_10$theta)
write.csv(stmdf_theta, file = "../Result/clean_topicmodelling_t45_cleantext_addyear_stm_theta_180221.csv")
stmdf<- cbind(strings$PartyID, strings$Year, stmdf_theta)
dem_res <- subset(stmdf, strings$PartyID == "Dem" & strings$Year==2016)
dem_pro <- colMeans(dem_res[3:47])
rep_res <- subset(stmdf, strings$PartyID == "Rep" & strings$Year==2016)
rep_pro <- colMeans(rep_res[3:47])
barplot(dem_pro, #names.arg = c('T1','T2','T3','T4','T5','T6','T7','T8'),
main="Average proportion \n in each topic for Dem in 2016",
col = 'orange', cex.main =.9, ylim = c(-0,0.4))
barplot(rep_pro, #names.arg = c('T1','T2','T3','T4','T5','T6','T7','T8'),
main="Average proportion \n in each topic for Rep in 2016",
col = 'orange', cex.main =.9, ylim = c(-0,0.4))
r
r
which.max(dem_pro)
which.max(rep_pro)
View(r)
View(r)
stm_15_labels_20$topicnums
stm_15_labels_20
View(stmdf_theta)
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
library(readtext)
library(stringr)
library(stm)
library(stats)
library(dplyr)
alldf<-read.csv('../Data/alldf_180223.csv')
alldf_sw<-subset(alldf_addsw, (!is.na(alldf_addsw$swing)))
alldf_addsw <-alldf%>%mutate(swing = ifelse((Year==2008&swing_last_08 <= 0.05)|
(Year==2012&swing_last_12 <= 0.05)|
(Year==2016&swing_last_16 <= 0.05), 1, 0))
alldf_sw<-subset(alldf_addsw, (!is.na(alldf_addsw$swing)))
alldf_rust<-subset(alldf_sw, alldf_sw$Rustbelt == 1)
alldf_norust<-subset(alldf_sw, alldf_sw$Rustbelt == 0)
alldf_norust_sw0<-subset(alldf_norust, alldf_norust$swing == 0)
alldf_norust_sw1<-subset(alldf_norust, alldf_norust$swing == 1)
processed_sw <- textProcessor(alldf_norust_sw1$Clean,
removestopwords = T, removenumbers = T,
lowercase = T, removepunctuation = T)
alldf<-read.csv('../Data/alldf_180223.csv')
alldf_addsw <-alldf%>%mutate(swing = ifelse((Year==2008&swing_last_08 <= 0.05)|
(Year==2012&swing_last_12 <= 0.05)|
(Year==2016&swing_last_16 <= 0.05), 1, 0))
alldf_sw<-subset(alldf_addsw, (!is.na(alldf_addsw$swing)))
alldf_rust<-subset(alldf_sw, alldf_sw$Rustbelt == 1)
alldf_norust<-subset(alldf_sw, alldf_sw$Rustbelt == 0)
alldf_norust_sw0<-subset(alldf_norust, alldf_norust$swing == 0)
alldf_norust_sw1<-subset(alldf_norust, alldf_norust$swing == 1)
processed_sw <- textProcessor(alldf_norust_sw1$Clean,
removestopwords = T, removenumbers = T,
lowercase = T, removepunctuation = T)
out_sw <- prepDocuments(processed_sw$documents, processed_sw$vocab,
processed_sw$meta)
fit_10_sw <- stm(out_sw$documents, out_sw$vocab
, K=45
, emtol = 0.00001
, seed = 12345
, verbose = F)
stm_15_labels_20_sw <- labelTopics(fit_10_sw, n = 10, topics = 1:45)
#stm_8topic <- stm(out$documents, out$vocab, 8, seed= 1234,  verbose = F)
thoughts3 <- findThoughts(stm_15_labels_20_sw, texts=shortdoc, n=100, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw n=100, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw, n=100, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw,  n=100, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw, texts=alldf_norust_sw1, n=100, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw, n=100, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw,texts = NULL, n=100, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw, texts = NULL, n=10, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw, n=10, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw1, n=10, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw, n=10, topics=36)$docs[[1]]
thoughts3 <- findThoughts(stm_15_labels_20_sw, n=10, topics=36)
findThoughts(stm_15_labels_20_sw, n=10, topics=36)
findThoughts(stm_15_labels_20_sw, n=10, topics=36)
thoughts3 <- findThoughts(fit_10_sw, n=100, topics=36)
plotQuote(thoughts3, width=40, main="Topic 3")
thoughts3 <- findThoughts(fit_10_sw, n=100, topics=36)$docs[[1]]
thoughts3
plotQuote(thoughts3, width=40, main="Topic 3")
thoughts3 <- findThoughts(fit_10_sw, n=100, topics=36)$docs[[1]]
plotQuote(thoughts3, width=40, main="Topic 3")
thoughts3 <- findThoughts(fit_10_sw, n=10, topics=36)$docs[[1]]
plotQuote(thoughts3, width=40, main="Topic 3")
thoughts3 <- findThoughts(fit_10_sw, n=100, topics=36)$docs[[1]]
thoughts3 <- findThoughts(fit_10_sw, n=100, topics=36)
plotQuote(thoughts3, width=40, main="Topic 3")
thoughts3
thoughts3$index
alldf_norust_sw1
alldf_norust_sw1[117]
alldf_norust_sw1[[117]]
alldf_norust_sw1[117,]
alldf_norust_sw1[117,]$Clean
alldf_norust_sw1[114,]$Clean
alldf_norust_sw1[114,]$Author
alldf_norust_sw1[114]$Author
alldf_norust_sw1$Author[114]
alldf_norust_sw1$Year[114]
alldf_norust_sw1$No.[114]
alldf_norust_sw1$No.[117]
alldf_norust_sw1$Year[117]
alldf_norust_sw1$Author[117]
thoughts3
thoughts3$index
alldf<-read.csv('../Data/alldf_180223.csv')
knitr::opts_chunk$set(echo = TRUE)
library(foreign)
library(readtext)
library(stringr)
library(stm)
library(stats)
library(dplyr)
alldf<-read.csv('../Data/alldf_180223.csv')
alldf_addsw <-alldf%>%mutate(swing = ifelse((Year==2008&swing_last_08 <= 0.05)|
(Year==2012&swing_last_12 <= 0.05)|
(Year==2016&swing_last_16 <= 0.05), 1, 0))
alldf_sw<-subset(alldf_addsw, (!is.na(alldf_addsw$swing)))
alldf_rust<-subset(alldf_sw, alldf_sw$Rustbelt == 1)
alldf_norust<-subset(alldf_sw, alldf_sw$Rustbelt == 0)
alldf_norust_nosw<-subset(alldf_norust, alldf_norust$swing == 0)
alldf_norust_sw<-subset(alldf_norust, alldf_norust$swing == 1)
processed_sw <- textProcessor(alldf_norust_sw$Clean,
removestopwords = T, removenumbers = T,
lowercase = T, removepunctuation = T)
out_sw <- prepDocuments(processed_sw$documents, processed_sw$vocab,
processed_sw$meta)
fit_10_sw <- stm(out_sw$documents, out_sw$vocab
, K=45
, emtol = 0.00001
, seed = 12345
, verbose = F)
alldf<-read.csv('../Data/alldf_180223.csv')
alldf_addsw <-alldf%>%mutate(swing = ifelse((Year==2008&swing_last_08 <= 0.05)|
(Year==2012&swing_last_12 <= 0.05)|
(Year==2016&swing_last_16 <= 0.05), 1, 0))
alldf_sw<-subset(alldf_addsw, (!is.na(alldf_addsw$swing)))
alldf_rust<-subset(alldf_sw, alldf_sw$Rustbelt == 1)
alldf_norust<-subset(alldf_sw, alldf_sw$Rustbelt == 0)
alldf_norust_nosw<-subset(alldf_norust, alldf_norust$swing == 0)
alldf_norust_sw<-subset(alldf_norust, alldf_norust$swing == 1)
processed_sw <- textProcessor(alldf_norust_sw$Clean,
removestopwords = T, removenumbers = T,
lowercase = T, removepunctuation = T)
out_sw <- prepDocuments(processed_sw$documents, processed_sw$vocab,
processed_sw$meta)
fit_10_sw <- stm(out_sw$documents, out_sw$vocab
, K=45
, emtol = 0.00001
, seed = 12345
, verbose = F)
stm_15_labels_20_sw <- labelTopics(fit_10_sw, n = 10, topics = 1:45)
stm_15_labels_20_sw
plotQuote(thoughts3, width=40, main="Topic 3")
out_sw$meta
setwd("~/Desktop/2018WINTER/PLSC43502/ML_finalPJT/Result/Sentiment")
rust<-read.csv('rust_belt_5_180311.csv')
rust$neg_trade[]
rust$neg_trade[1]
rust$neg_trade[[1]]
rust$neg_trade[1,]
rust$neg_trade[,1]
rust$neg_trade
typeof(rust$neg_trade)
as.data.frame(rust$neg_notrade)
neg<-as.data.frame(rust$neg_notrade)
neg[1]
neg[1,]
neg[,1]
neg<-as.data.frame(as.character(rust$neg_notrade))
neg[1]
